{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"fizzbuzz_practice","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMXvkeGPQg0NzRU7xD1oFS3"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"7oyNfACkIjQv","executionInfo":{"status":"ok","timestamp":1635797670937,"user_tz":-330,"elapsed":26374,"user":{"displayName":"Surya Teja","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh9OE9xZOmgCsYbSDcyWWLmdv2woZyYW7QocaVC0g=s64","userId":"04825268471411861520"}}},"source":["# solve the simple fizzbuzz in 17 minutes with NNs\n","\n","import torch \n","import numpy as np\n","import random"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"sqHbppfPIv5i","executionInfo":{"status":"ok","timestamp":1635799388447,"user_tz":-330,"elapsed":408,"user":{"displayName":"Surya Teja","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh9OE9xZOmgCsYbSDcyWWLmdv2woZyYW7QocaVC0g=s64","userId":"04825268471411861520"}}},"source":["# input data X: (N, D); N = 10k, D = 100 dimension vector.\n","N = 100000\n","D = 100\n","x = np.random.choice(range(100), size = N)\n","\n","assert x.shape[0] == N\n","\n","X = np.zeros((N, D))\n","for idx, i in enumerate(x): X[idx, i] = 1. \n","\n","# output data Y: (N, 3); 0: Fizzbuzz, Fizz, Buzz\n","y = []\n","for i in x: \n","  if i % 15 == 0: y.append(0)\n","  elif i % 3 == 0: y.append(1)\n","  elif i % 5 == 0: y.append(2)\n","  else: y.append(3)\n","\n","# Y = np.zeros((N, 3))\n","# for idx, i in enumerate(y): Y[idx, i] = 1.\n","Y = np.array(y)\n","\n","assert X.shape[0] == Y.shape[0]"],"execution_count":37,"outputs":[]},{"cell_type":"code","metadata":{"id":"WFRRUz_WJSW6","executionInfo":{"status":"ok","timestamp":1635799397354,"user_tz":-330,"elapsed":510,"user":{"displayName":"Surya Teja","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh9OE9xZOmgCsYbSDcyWWLmdv2woZyYW7QocaVC0g=s64","userId":"04825268471411861520"}}},"source":["# model\n","from torch import nn\n","import torch.nn.functional as F\n","\n","class FBmodel(nn.Module):\n","  def __init__(self, D):\n","    super(FBmodel, self).__init__()\n","    self.lay1 = nn.Linear(D, D//2)\n","    self.dp = nn.Dropout(p = 0.5)\n","    self.lay2 = nn.Linear(D//2, 4)\n","\n","  def forward(self, x):\n","    x_ = F.relu(self.lay1(x))\n","    x_ = self.dp(x_)\n","    x_ = F.relu(self.lay2(x_))\n","    out = F.softmax(x_, dim = -1)\n","\n","    return out"],"execution_count":38,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l202Qx0mKWS_","executionInfo":{"status":"ok","timestamp":1635800960121,"user_tz":-330,"elapsed":8719,"user":{"displayName":"Surya Teja","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh9OE9xZOmgCsYbSDcyWWLmdv2woZyYW7QocaVC0g=s64","userId":"04825268471411861520"}},"outputId":"02b16b73-6274-4d28-c601-107f22c8ac88"},"source":["# train loop\n","import torch.optim as optim\n","from tqdm import tqdm\n","\n","M = FBmodel(D)\n","L = nn.CrossEntropyLoss()\n","opt = optim.Adam(M.parameters(), lr = 0.01)\n","\n","epochs = 10\n","B = N//1000 # batch size = 100\n","X_ = torch.FloatTensor(X)\n","Y_ = torch.LongTensor(Y)\n","\n","opt.zero_grad()\n","M.zero_grad()\n","for e in range(epochs):\n","  for idx in tqdm(range(1000)):\n","    x_batch = X_[B * (idx) : B * (idx + 1)]\n","    y_batch = Y_[B * (idx) : B * (idx + 1)]\n","    out = M(x_batch)\n","    # print(out.shape, out.dtype)\n","    # print(y_batch.shape, y_batch.dtype)\n","    loss = L(out, y_batch)\n","    # print(round(loss.item(), 3))\n","\n","    loss.backward()\n","    opt.step()\n","\n","    # break\n","  # break"],"execution_count":48,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 1000/1000 [00:00<00:00, 1192.71it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1180.06it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1226.33it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1194.40it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1210.15it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1191.15it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1171.17it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1165.16it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1194.27it/s]\n","100%|██████████| 1000/1000 [00:00<00:00, 1184.34it/s]\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v2L1H-fGL8U0","executionInfo":{"status":"ok","timestamp":1635801169527,"user_tz":-330,"elapsed":518,"user":{"displayName":"Surya Teja","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh9OE9xZOmgCsYbSDcyWWLmdv2woZyYW7QocaVC0g=s64","userId":"04825268471411861520"}},"outputId":"69bb48b1-abea-494f-fcb9-4fe746aaa36f"},"source":["M.eval()\n","test_inp = 18\n","x = np.zeros((1, D))\n","x[0, test_inp] = 1.\n","y_true = 3\n","with torch.no_grad():\n","  x_ = torch.FloatTensor(x)\n","  print(M(x_), np.argmax(M(x_).numpy()))"],"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0.2500, 0.2500, 0.2500, 0.2500]]) 0\n"]}]},{"cell_type":"code","metadata":{"id":"-PKSKPr2V2aF"},"source":[""],"execution_count":null,"outputs":[]}]}